// Code generated by protoc-gen-go. DO NOT EDIT.
// source: primefactor/primefactorpb/primefactor.proto

package primefactorpb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Number struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Number) Reset()         { *m = Number{} }
func (m *Number) String() string { return proto.CompactTextString(m) }
func (*Number) ProtoMessage()    {}
func (*Number) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7074faed1523aa8, []int{0}
}

func (m *Number) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Number.Unmarshal(m, b)
}
func (m *Number) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Number.Marshal(b, m, deterministic)
}
func (m *Number) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Number.Merge(m, src)
}
func (m *Number) XXX_Size() int {
	return xxx_messageInfo_Number.Size(m)
}
func (m *Number) XXX_DiscardUnknown() {
	xxx_messageInfo_Number.DiscardUnknown(m)
}

var xxx_messageInfo_Number proto.InternalMessageInfo

func (m *Number) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type PrimeFactorRequest struct {
	Number               *Number  `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorRequest) Reset()         { *m = PrimeFactorRequest{} }
func (m *PrimeFactorRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorRequest) ProtoMessage()    {}
func (*PrimeFactorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7074faed1523aa8, []int{1}
}

func (m *PrimeFactorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorRequest.Unmarshal(m, b)
}
func (m *PrimeFactorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorRequest.Marshal(b, m, deterministic)
}
func (m *PrimeFactorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorRequest.Merge(m, src)
}
func (m *PrimeFactorRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorRequest.Size(m)
}
func (m *PrimeFactorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorRequest proto.InternalMessageInfo

func (m *PrimeFactorRequest) GetNumber() *Number {
	if m != nil {
		return m.Number
	}
	return nil
}

type PrimeFactorResponse struct {
	Prime                int32    `protobuf:"varint,1,opt,name=prime,proto3" json:"prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeFactorResponse) Reset()         { *m = PrimeFactorResponse{} }
func (m *PrimeFactorResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeFactorResponse) ProtoMessage()    {}
func (*PrimeFactorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f7074faed1523aa8, []int{2}
}

func (m *PrimeFactorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeFactorResponse.Unmarshal(m, b)
}
func (m *PrimeFactorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeFactorResponse.Marshal(b, m, deterministic)
}
func (m *PrimeFactorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeFactorResponse.Merge(m, src)
}
func (m *PrimeFactorResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeFactorResponse.Size(m)
}
func (m *PrimeFactorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeFactorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeFactorResponse proto.InternalMessageInfo

func (m *PrimeFactorResponse) GetPrime() int32 {
	if m != nil {
		return m.Prime
	}
	return 0
}

func init() {
	proto.RegisterType((*Number)(nil), "primefactor.Number")
	proto.RegisterType((*PrimeFactorRequest)(nil), "primefactor.PrimeFactorRequest")
	proto.RegisterType((*PrimeFactorResponse)(nil), "primefactor.PrimeFactorResponse")
}

func init() {
	proto.RegisterFile("primefactor/primefactorpb/primefactor.proto", fileDescriptor_f7074faed1523aa8)
}

var fileDescriptor_f7074faed1523aa8 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2e, 0x28, 0xca, 0xcc,
	0x4d, 0x4d, 0x4b, 0x4c, 0x2e, 0xc9, 0x2f, 0xd2, 0x47, 0x62, 0x17, 0x24, 0x21, 0xf3, 0xf4, 0x0a,
	0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xb8, 0x91, 0x84, 0x94, 0xa4, 0xb8, 0xd8, 0xfc, 0x4a, 0x73, 0x93,
	0x52, 0x8b, 0x84, 0x04, 0xb8, 0x98, 0xf3, 0x4a, 0x73, 0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83,
	0x40, 0x4c, 0x25, 0x47, 0x2e, 0xa1, 0x00, 0x90, 0x52, 0x37, 0xb0, 0xd2, 0xa0, 0xd4, 0xc2, 0xd2,
	0xd4, 0xe2, 0x12, 0x21, 0x6d, 0x2e, 0xb6, 0x3c, 0xb0, 0x0e, 0xb0, 0x52, 0x6e, 0x23, 0x61, 0x3d,
	0x64, 0x2b, 0x20, 0x86, 0x05, 0x41, 0x95, 0x28, 0x69, 0x73, 0x09, 0xa3, 0x18, 0x51, 0x5c, 0x90,
	0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc2, 0xc5, 0x0a, 0xd6, 0x04, 0xb5, 0x0d, 0xc2, 0x31, 0xca, 0x42,
	0xb1, 0x2f, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x55, 0x28, 0x84, 0x8b, 0x1b, 0x49, 0x54, 0x48,
	0x1e, 0xc5, 0x3a, 0x4c, 0xf7, 0x49, 0x29, 0xe0, 0x56, 0x00, 0xb1, 0x5d, 0x89, 0xc1, 0x80, 0xd1,
	0x89, 0x3f, 0x8a, 0x17, 0x25, 0x9c, 0x92, 0xd8, 0xc0, 0x81, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x8b, 0x1e, 0xa4, 0x4b, 0x4b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrimeFactorServiceClient is the client API for PrimeFactorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimeFactorServiceClient interface {
	PrimeFactor(ctx context.Context, in *PrimeFactorRequest, opts ...grpc.CallOption) (PrimeFactorService_PrimeFactorClient, error)
}

type primeFactorServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeFactorServiceClient(cc *grpc.ClientConn) PrimeFactorServiceClient {
	return &primeFactorServiceClient{cc}
}

func (c *primeFactorServiceClient) PrimeFactor(ctx context.Context, in *PrimeFactorRequest, opts ...grpc.CallOption) (PrimeFactorService_PrimeFactorClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PrimeFactorService_serviceDesc.Streams[0], "/primefactor.PrimeFactorService/PrimeFactor", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeFactorServicePrimeFactorClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeFactorService_PrimeFactorClient interface {
	Recv() (*PrimeFactorResponse, error)
	grpc.ClientStream
}

type primeFactorServicePrimeFactorClient struct {
	grpc.ClientStream
}

func (x *primeFactorServicePrimeFactorClient) Recv() (*PrimeFactorResponse, error) {
	m := new(PrimeFactorResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeFactorServiceServer is the server API for PrimeFactorService service.
type PrimeFactorServiceServer interface {
	PrimeFactor(*PrimeFactorRequest, PrimeFactorService_PrimeFactorServer) error
}

func RegisterPrimeFactorServiceServer(s *grpc.Server, srv PrimeFactorServiceServer) {
	s.RegisterService(&_PrimeFactorService_serviceDesc, srv)
}

func _PrimeFactorService_PrimeFactor_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeFactorRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeFactorServiceServer).PrimeFactor(m, &primeFactorServicePrimeFactorServer{stream})
}

type PrimeFactorService_PrimeFactorServer interface {
	Send(*PrimeFactorResponse) error
	grpc.ServerStream
}

type primeFactorServicePrimeFactorServer struct {
	grpc.ServerStream
}

func (x *primeFactorServicePrimeFactorServer) Send(m *PrimeFactorResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeFactorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "primefactor.PrimeFactorService",
	HandlerType: (*PrimeFactorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeFactor",
			Handler:       _PrimeFactorService_PrimeFactor_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "primefactor/primefactorpb/primefactor.proto",
}
